{"version":3,"sources":["services/persons.js","components/AddNewPersonsForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","person","delete","id","put","AddNewPersonForm","onSubmit","nameInput","onNameChange","numberInput","onNumberChange","value","onChange","type","Notification","message","notificationStyle","color","isError","background","fontSize","borderStyle","borderRadius","padding","marginBttom","console","log","style","PersonEntry","deletePerson","name","number","onClick","SearchFilter","filter","onFilterChange","Persons","persons","map","p","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","personsService","initialPersons","length","shownPersons","toLowerCase","includes","event","target","preventDefault","some","window","confirm","find","changedPerson","returnedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1c76dec.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst createPerson = (newPerson) => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (person) => {\r\n    const request = axios.delete(`${baseUrl}/${person.id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, createPerson, deletePerson, updatePerson }","const AddNewPersonForm = ({ onSubmit, nameInput, onNameChange, numberInput, onNumberChange }) => (\r\n    <form onSubmit={onSubmit}>\r\n      <div>\r\n        name: <input value={nameInput} onChange={onNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={numberInput} onChange={onNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  export default AddNewPersonForm","const Notification = ({ message, isError }) => {\r\n    const notificationStyle = {\r\n        color: isError ? 'red' : 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 15,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 20,\r\n        marginBttom: 10\r\n    }\r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    console.log(\"rendering notification\")\r\n    return (\r\n        <div style={notificationStyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useEffect, useState } from 'react'\nimport personsService from './services/persons'\nimport AddNewPersonForm from './components/AddNewPersonsForm'\nimport Notification from './components/Notification'\n\nconst PersonEntry = ({ person, deletePerson }) => (\n  <p>\n    {person.name} {person.number}\n    <button onClick={deletePerson}>delete</button>\n    </p>\n)\n\nconst SearchFilter = ({ filter, onFilterChange }) => (\n  <div>\n    filter shown with <input value={filter} onChange={onFilterChange} />\n  </div>\n)\n\nconst Persons = ({ persons, deletePerson }) => (\n    <div>\n      {persons.map(p => \n        <PersonEntry \n        key={p.id} \n        person={p} \n        deletePerson={() => deletePerson(p.id)}/>)}\n    </div>\n  )\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    personsService\n      .getAll()\n      .then(initialPersons => {\n        console.log('getAll persons promise fulfilled')\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  console.log('rendering', persons.length, 'persons')\n\n  const shownPersons = filter === ''  \n    ? persons\n    : persons.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()))\n\n  const addNewPerson = (event) => {\n    event.preventDefault()\n    \n    if (persons.some(p => p.name === newName)) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const person = persons.find(p => p.name === newName)\n        const changedPerson = { ...person, number: newNumber }\n        personsService\n          .updatePerson(person.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id === person.id ? returnedPerson : p))\n            setNotificationMessage(`Changed number for ${returnedPerson.name}`)\n            setTimeout(() => setNotificationMessage(null), 5000)\n          })\n          .catch(error => {\n            setErrorMessage(\n              `Information of '${person.name}' was already deleted from server`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            setPersons(persons.filter(p => p.id !== person.id))\n          })\n          return;\n      }\n    }\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    personsService\n      .createPerson(newPerson)\n      .then(returnedPerson => {\n        console.log(returnedPerson)\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setNotificationMessage(`Added ${returnedPerson.name}`)\n        setTimeout(() => setNotificationMessage(null), 5000)\n      })\n  }\n\n  const handleNawNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setFilter(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n    const person = persons.find(p => p.id === id)\n\n    if(window.confirm(`Delete ${person.name}?`)) {\n      personsService\n        .deletePerson(person)\n        .then(person => {\n          console.log(person)\n          setPersons(persons.filter(p => p.id !== id))\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} isError={true} />\n      <Notification message={notificationMessage} isError={false} />\n      <SearchFilter filter={filter} onFilterChange={handleFilterChange}/>\n      <h3>Add a new contact</h3>\n      <AddNewPersonForm \n        onSubmit={addNewPerson}\n        nameInput={newName}\n        onNameChange={handleNawNameChange}\n        numberInput={newNumber}\n        onNumberChange={handleNewNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={shownPersons} deletePerson={(id) => deletePerson(id)}/>\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}